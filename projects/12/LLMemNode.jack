class LLMemNode {
    // field location - integer - the location of memory block
    field int location;
    // field next - LLMemNode - the location of the memory block of the next node
    field LLMemNode next;
    // field length - integer the size of the memory block
    field int length;

    constructor LLMemNode new(int length, int location){
        var int length;
        var int location;
        var LLMemNode next;

        let length = length;
        let location = location;
        let next = null;

        return this;
    }

    method void dispose(){
        return;
    }

    method void setLength(int newLength){
        let length = newLength;

        return;
    }
    method int getLength(){
        return length;
    }

    method void setLocation(int newLocation){
        let location = newLocation;

        return;
    }
    method int getLocation(){
        return location;
    }

    method void setNext(LLMemNode newNext){
        let next = newNext;

        return;
    }
    method LLMemNode getNext(){
        return next;
    }

    method void printNodes(){
        var LLMemNode curNode;
        let curNode = this;

        while(~(curNode.getNext() = null)){
            do Output.println();
            do Output.printString("length:");
            do Output.printInt(curNode.getLength());
            do Output.printString("location:");
            do Output.printInt(curNode.getLocation());
            do Output.println();
            let curNode = curNode.getNext();
        }
        return;
    }

}