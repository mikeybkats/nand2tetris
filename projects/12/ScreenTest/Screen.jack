// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Screen.jack

/**
 * A library of functions for displaying graphics on the screen.
 * The Hack physical screen consists of 256 rows (indexed 0..255, top to bottom)
 * of 512 pixels each (indexed 0..511, left to right). The top left pixel on 
 * the screen is indexed (0,0).
 */
class Screen {
    static Array twoToThe;

    /** Initializes the Screen. */
    function void init() {
        var int i;
        var int double;

        let twoToThe = Array.new(16);

        let i = 0;
        let double = 1;

        while(i < 16){
            let twoToThe[i] = double;

            let double = double + double;
            let i = i + 1;

        }
        let twoToThe[15] = -32767;

        return;
    }

    /** Erases the entire screen. */
    function void clearScreen() {
        return;
    }

    /** Sets the current color, to be used for all subsequent drawXXX commands.
     *  Black is represented by true, white by false. */
    function void setColor(boolean b) {
        return;
    }

    /** Draws the (x,y) pixel, using the current color. */
    function void drawPixel(int x, int y) {
        var int segment;
        var int address;
        var int value;
        var int mod;
        var int bit;

        // 32 ram segments per line
        // linestart = linestart + 32 * segment
        let segment = (32 * y) + (x / 16);
        let address = 16384;
        let address = address + (segment);

        let value = Memory.peek(address);

        let mod = x - ((x / 16) * 16)
        
        let bit = twoToThe[mod];

        // value  0001 0001 0000 0011
        // x % 16 0000 0000 1000 0000 
        let value = (value | bit);

        do Memory.poke(address, value);

        return;
    }

    /** Draws a line from pixel (x1,y1) to pixel (x2,y2), using the current color. */
    function void drawLine(int x1, int y1, int x2, int y2) {
        return;
    }

    /** Draws a filled rectangle whose top left corner is (x1, y1)
     * and bottom right corner is (x2,y2), using the current color. */
    function void drawRectangle(int x1, int y1, int x2, int y2) {
        return;
    }

    /** Draws a filled circle of radius r<=181 around (x,y), using the current color. */
    function void drawCircle(int x, int y, int r) {
        return;
    }
}
