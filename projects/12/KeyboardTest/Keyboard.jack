// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 * RAM[24576] contains the 16 bit register for the keyboard
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        var char key;
        // get the key from the ram
        let key = Memory.peek(24576);

        return key;
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var char key;
        let key = 0;

        while(key = 0){
            let key = Keyboard.keyPressed();

            if(~(key = 0)){
                do Output.printChar(key);
                do Sys.wait(200);
                return key;
            }
        }

        return 0;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var String input;
        var char letter;
        var int count;
        var int i;
        var String output;

        let input = String.new(125);

        do Output.printString(message);

        let count = 0;
        while(~(letter = 128)){
            let letter = Keyboard.readChar();

            if(~(letter = 128)){
                do input.appendChar(letter);
            }

            if(letter = 8){
                do input.eraseLastChar();
            }
            let count = count + 1;
        }

        let output = String.new(count);
        let i = 0;
        while(i < (count - 1)){
            do output.appendChar(input.charAt(i));
            let i = i + 1;
        }

        return output;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var String number;
        var int total;
        var int count;
        var int isNegative;

        let number = Keyboard.readLine(message);
        let total = 0;
        let count = 0;

        if(number.charAt(0) = 45){
            let isNegative = 1;
            let count = 1;
        }

        while(count < number.length()){
            let total = total * 10 + (number.charAt(count) - 48);
            // -32123
            // 0 // skip
            // 1 // 3
            // 2 // 3 * 10 + (2) = 32
            // 3 // 32 * 10 + (1) = 321 
            // 4 // 321 * 10 + (2) = 3212
            // 5 // 3212 * 10 + (3) = 32123

            let count = count + 1;
        }

        if(isNegative){
            let total = -total;
        }

        return total;
    }
}
