/** 
class Card
    field suit: "clubs" | "diamonds" | "hearts" | "spades"
    field value: "2.. 10" | "jack" | "queen" | "king" | "ace"
    field locationX: int
    field locationY: int

    method renderCard: void
*/

class Card {
    field String suit;
    field String value;
    field int locationX;
    field int locationY;
    field Suit suitObj;
    field CardValue cardValueObj;
    field DrawSuit suitDrawing;
    field Boolean hidden;

    constructor Card new(String suitName, String valueName, Suit suitObjArg, CardValue cardValueArg){
        let suit = suitName;
        let value = valueName;
        let suitObj = suitObjArg;
        let cardValueObj = cardValueArg;
        let locationX = 0;
        let locationY = 0;
        let hidden = false;
        return this;
    }

    method void setHidden(boolean newHidden){
        let hidden = newHidden;
        return;
    }

    method void setLocationX(int locX){
        let locationX = locX;
        return;
    }

    method void setLocationY(int locY){
        let locationY = locY;
        return;
    }

    method String getName(){
        return value;
    }
    
    method String getSuit(){
        return suit;
    }
    
    method int getValue(){
        if(value = cardValueObj.getDeuce()){
            return 2;
        }
        if(value = cardValueObj.getThree()){
            return 3;
        }
        if(value = cardValueObj.getFour()){
            return 4;
        }
        if(value = cardValueObj.getFive()){
            return 5;
        }
        if(value = cardValueObj.getSix()){
            return 6;
        }
        if(value = cardValueObj.getSeven()){
            return 7;
        }
        if(value = cardValueObj.getEight()){
            return 8;
        }
        if(value = cardValueObj.getNine()){
            return 9;
        }
        if(value = cardValueObj.getTen()){
            return 10;
        }
        if(value = cardValueObj.getJack()){
            return 10;
        }
        if(value = cardValueObj.getQueen()){
            return 10;
        }
        if(value = cardValueObj.getKing()){
            return 10;
        }
        if(value = cardValueObj.getAce()){
            return 1;
        }
        return 0;
    }

    method void renderValue(int x, int y){
        var int base;
        let base = x + y + 705;
        if(value = cardValueObj.getDeuce()){
            do suitDrawing.deuce(base);
        }
        if(value = cardValueObj.getThree()){
            do suitDrawing.three(base);
        }
        if(value = cardValueObj.getFour()){
            do suitDrawing.four(base);
        }
        if(value = cardValueObj.getFive()){
            do suitDrawing.five(base);
        }
        if(value = cardValueObj.getSix()){
            do suitDrawing.six(base);
        }
        if(value = cardValueObj.getSeven()){
            do suitDrawing.seven(base);
        }
        if(value = cardValueObj.getEight()){
            do suitDrawing.eight(base);
        }
        if(value = cardValueObj.getNine()){
            do suitDrawing.nine(base);
        }
        if(value = cardValueObj.getTen()){
            do suitDrawing.ten(base);
        }
        if(value = cardValueObj.getJack()){
            do suitDrawing.jack(base);
        }
        if(value = cardValueObj.getQueen()){
            do suitDrawing.queen(base);
        }
        if(value = cardValueObj.getKing()){
            do suitDrawing.king(base);
        }
        if(value = cardValueObj.getAce()){
            do suitDrawing.ace(base);
        }
        return;
    }

    method void renderBorder(int x, int y) {
        var int base;
        let base = x + y;
        do suitDrawing.topLeft(base - 256);
        do suitDrawing.topRight(base - 255);

        do suitDrawing.borderLeft(base + 256);
        do suitDrawing.borderRight(base + 257);

        do suitDrawing.bottomLeft(base + 768);
        do suitDrawing.bottomRight(base + 769);
        return;
    }

    method void renderSuit(int x, int y){
        if(suit = suitObj.getClubs()){
            do suitDrawing.clubTopRight(y + x - 255);
            do suitDrawing.clubTopLeft(y + x - 256);

            do suitDrawing.clubRight(y + x + 257);
            do suitDrawing.clubLeft(y + x + 256);
        }
        if(suit = suitObj.getDiamonds()){
            do suitDrawing.diamondsTopRight(y + x - 255);
            do suitDrawing.diamondsTopLeft(y + x - 256);

            do suitDrawing.diamondsBottomRight(y + x + 257);
            do suitDrawing.diamondsBottomLeft(y + x + 256);
        }
        if(suit = suitObj.getHearts()){
            do suitDrawing.heartsTopRight(y + x - 255);
            do suitDrawing.heartsTopLeft(y + x - 256);

            do suitDrawing.heartsBottomRight(y + x + 257);
            do suitDrawing.heartsBottomLeft(y + x + 256);
        }
        if(suit = suitObj.getSpades()){
            do suitDrawing.spadesTopRight(y + x - 255);
            do suitDrawing.spadesTopLeft(y + x - 256);

            do suitDrawing.spadesBottomRight(y + x + 257);
            do suitDrawing.spadesBottomLeft(y + x + 256);
        }

        return;
    }

    method void render(){
        var int y;
        var int x;
        var int rectX;
        var int rectY;

        let suitDrawing = DrawSuit.new();

        let y = locationY * 32;
        let y = y + 256;
        let x = locationX;

        let rectY = locationY;
        let rectY = rectY + 4;
        let rectX = locationX * 16;
        let rectX = rectX + 5;

        do renderBorder(x, y);
        
        if(hidden = true){
            return;
        }
        do renderValue(x, y);
        do renderSuit(x, y);

        return;
    }
}